;;  The Stańczyk Programming Language  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                                                      ;
;            ¿«fº"└└-.`└└*∞▄_              ╓▄∞╙╙└└└╙╙*▄▄               ;
;         J^. ,▄▄▄▄▄▄_      └▀████▄ç    JA▀            └▀v             ;
;       ,┘ ▄████████████▄¿     ▀██████▄▀└      ╓▄██████▄¿ "▄_          ;
;      ,─╓██▀└└└╙▀█████████      ▀████╘      ▄████████████_`██▄        ;
;     ;"▄█└      ,██████████-     ▐█▀      ▄███████▀▀J█████▄▐▀██▄      ;
;     ▌█▀      _▄█▀▀█████████      █      ▄██████▌▄▀╙     ▀█▐▄,▀██▄    ;
;    ▐▄▀     A└-▀▌  █████████      ║     J███████▀         ▐▌▌╙█µ▀█▄   ;
;  A╙└▀█∩   [    █  █████████      ▌     ███████H          J██ç ▀▄╙█_  ;
; █    ▐▌    ▀▄▄▀  J█████████      H    ████████          █    █  ▀▄▌  ;
;  ▀▄▄█▀.          █████████▌           ████████          █ç__▄▀ ╓▀└╙%_;
;                 ▐█████████      ▐    J████████▌          .└╙   █¿  ,▌;
;                 █████████▀╙╙█▌└▐█╙└██▀▀████████                 ╙▀▀▀ ;
;                ▐██▀┘Å▀▄A └▓█╓▐█▄▄██▄J▀@└▐▄Å▌▀██▌                     ;
;                █▄▌▄█M╨╙└└-           .└└▀**▀█▄,▌                     ;
;                ²▀█▄▄L_                  _J▄▄▄█▀└                     ;
;                     └╙▀▀▀▀▀MMMR████▀▀▀▀▀▀▀└                          ;
;                                                                      ;
;                                                                      ;
; ███████╗████████╗ █████╗ ███╗   ██╗ ██████╗███████╗██╗   ██╗██╗  ██╗ ;
; ██╔════╝╚══██╔══╝██╔══██╗████╗  ██║██╔════╝╚══███╔╝╚██╗ ██╔╝██║ ██╔╝ ;
; ███████╗   ██║   ███████║██╔██╗ ██║██║       ███╔╝  ╚████╔╝ █████╔╝  ;
; ╚════██║   ██║   ██╔══██║██║╚██╗██║██║      ███╔╝    ╚██╔╝  ██╔═██╗  ;
; ███████║   ██║   ██║  ██║██║ ╚████║╚██████╗███████╗   ██║   ██║  ██╗ ;
; ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝╚══════╝   ╚═╝   ╚═╝  ╚═╝ ;
;                                                                      ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  The Stańczyk Programming Language  ;;

; Copyright (c) 2023 Nahuel Jesús Sacchetti and Stańczyk contributors

; Permission is hereby granted, free of charge, to any person obtaining
; a copy of this software and associated documentation files (the
; "Software"), to deal in the Software without restriction, including
; without limitation the rights to use, copy, modify, merge, publish,
; distribute, sublicense, and/or sell copies of the Software, and to
; permit persons to whom the Software is furnished to do so, subject to
; the following conditions:

; The above copyright notice and this permission notice shall be
; included in all copies or substantial portions of the Software.

; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
; LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
; OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
; WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

;; UNIX I/O Library
;; TODO: Add descriptions

;; File descriptor (fd)
const STDIN  0 .
const STDOUT 1 .
const STDERR 2 .

const LINUX_READ  0  .
const LINUX_WRITE 1  .
const LINUX_EXIT  60 .

const READ      0   .
const WRITE     1   .
const READWRITE 2   .
const CREATE    64  .
const TRUNCATE  512 .

function []argv int -> ptr do
  8 * argv (int) + (ptr) ->64
  if dup (int) 0 = do
    dup print
    "argv empty" error
  .
.

function clear do
  "\e[H\e[2J" print
.

function eputs ptr do
  dup strlen swap
  STDERR LINUX_WRITE
  syscall int ptr int int .
.

function error ptr do
  " ERROR: " eputs
  eputs
  "\n" eputs
  1 exit
.

function exit int do
  LINUX_EXIT
  syscall int int .
.

function* print ptr do
  dup strlen swap
  STDOUT LINUX_WRITE
  syscall int ptr int int .
.

function* print int do
  int->str print
.

function* print bool do
  if take 1 = do
    "true" print
  else
    "false" print
  .
.

function* println ptr do
  print
  "\n" print
.

function* println int do
  print
  "\n" print
.

function* println bool do
  print
  "\n" print
.

function read int ptr -> int do
  STDIN LINUX_READ
  syscall int ptr int int .
.
